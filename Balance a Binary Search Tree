/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer>ans=new ArrayList<>();
    void Inorder(TreeNode root){
        if(root==null){
            return;
        }
        Inorder(root.left);
        ans.add(root.val);
        Inorder(root.right);
    }
    private TreeNode Build_BST(int l,int r){
        if(l>r){
            return null;
        }
            int mid=(l+r)/2;
            TreeNode node=new TreeNode(ans.get(mid));
            node.left=Build_BST(l,mid-1);
            node.right=Build_BST(mid+1,r);
            return node;
        
    }
    public TreeNode balanceBST(TreeNode root) {
         
         Inorder(root);
         return Build_BST(0,ans.size()-1);
    }
}
